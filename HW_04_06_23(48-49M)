***********************ДОМАШНЯЯ РАБОТА********************************

Описание задания.
 1 уровень сложности: Из БД uni:
 
1)Найти компетенции, которых нет ни у одного преподавателя.

* можно воспользоваться оператором NOT EXISTS

SELECT title
FROM Competencies c
WHERE NOT EXISTS (
    SELECT 1
    FROM Teachers2Competencies tc
    WHERE tc.competencies_id = c.id
);

2)Вывести название курса и имя старосты.

* необходимо объединить таблицы Courses и Students с помощью оператора JOIN

SELECT c.title AS course_title, s.name AS headman_name
FROM Courses c
LEFT JOIN Students s ON c.headman_id = s.id;

3*. Вывести имя студента и имена старост, которые есть на курсах, которые он проходит.
https://github.com/VazgenDav2021/tasks ссылка не репозиторий




//////////////////////////////////////////////////Конспект лекции//////////////////////////////////////////////
-- 1. **Создание таблиц**
-- 1) Создать таблицу Students с полями:
-- - id целое число первичный ключ автоинкремент
-- - name строка 128 не null
-- - age целое число

-- 2) Создать таблицу Teachers с полями:
-- - id целое число первичный ключ автоинкремент
-- - name строка 128 не null
-- - age целое число

-- 3) Создать таблицу Competencies с полями:
-- - id целое число первичный ключ автоинкремент
-- - title строка 128 не null

-- 4) Создать таблицу Teachers2Competencies с полями:
-- - id целое число первичный ключ автоинкремент
-- - teacher_id целое число
-- - competencies_id целое число

-- 5) Создать таблицу Courses
-- - id целое число первичный ключ автоинкремент
-- - teacher_id целое число
-- - title строка 128 не null
-- - headman_id целое число

-- 6) Создать таблицу Students2Courses
-- - id целое число первичный ключ автоинкремент
-- - student_id целое число
-- - course_id целое число

-- DROP DATABASE IF EXIStS uni;
-- CREATE DATABASE uni;
-- use uni;

-- create table Students(
-- 	id INT primary key auto_increment,
--     name varchar(128) not null,
--     age integer
-- );

-- create table Teachers(
-- 	id integer primary key auto_increment,
--     name varchar(128) not null,
--     age INT
-- );

-- create table Competencies(
-- 	id INT primary key auto_increment,
--     title varchar(128) not null
-- );

-- create table Teachers2Competencies(
-- 	id integer primary key auto_increment,
--     teacher_id integer,
--     competencies_id integer
-- );

-- create table Courses(
-- 	id integer primary key auto_increment,
--     teacher_id integer,
--     title varchar(128) not null,
--     headman_id integer
-- );

-- create table Students2Courses(
-- 	id integer primary key auto_increment,
--     student_id integer,
--     course_id integer
-- );

-- 2. **Заполнение таблиц**
-- Добавить 6 записей в таблицу Students
-- Анатолий 29
-- Олег 25
-- Семен 27
-- Олеся 28
-- Ольга 31
-- Иван 22

-- Добавить 6 записей в таблицу Teachers
-- Петр 39
-- Максим 35
-- Антон 37
-- Всеволод 38
-- Егор 41
-- Светлана 32

-- Добавить 4 записей в таблицу Competencies
-- Математика 
-- Информатика
-- Программирование
-- Графика

-- Добавьте 6 записей в таблицу Teachers2Competencies
-- 1 1
-- 2 1
-- 2 3
-- 3 2
-- 4 1
-- 5 3

-- Добавьте 5 записей в таблицу Courses
-- 1 Алгебра логики 2
-- 2 Математическая статистика 3
-- 4 Высшая математика 5
-- 5 Javascript 1
-- 5 Базовый Python 1

-- Добавьте 5 записей в таблицу Students2Courses
-- 1 1
-- 2 1
-- 3 2
-- 3 3
-- 4 5


-- insert into students (name, age) values ('Анатолий', 29),
-- 										('Олег', 25),
--                                         ('Семен', 27),
--                                         ('Олеся', 28),
--                                         ('Ольга', 31),
--                                         ('Иван', 22);

-- insert into teachers (name, age) values ('Петр', 39);
-- insert into teachers (name, age) values ('Максим', 35);
-- insert into teachers (name, age) values ('Антон', 37);
-- insert into teachers (name, age) values ('Всеволод', 38);
-- insert into teachers (name, age) values ('Егор', 41);
-- insert into teachers (name, age) values ('Светлана', 32);

-- insert into Competencies (title) values ('Математика'),
-- 										('Информатика'), 
--                                         ('Программирование'), 
--                                         ('Графика');

-- insert into Teachers2Competencies (teacher_id, competencies_id) values (1, 1);
-- insert into Teachers2Competencies (teacher_id, competencies_id) values (2, 1);
-- insert into Teachers2Competencies (teacher_id, competencies_id) values (2, 3);
-- insert into Teachers2Competencies (teacher_id, competencies_id) values (3, 2);
-- insert into Teachers2Competencies (teacher_id, competencies_id) values (4, 1);
-- insert into Teachers2Competencies (teacher_id, competencies_id) values (5, 3);

-- insert into courses (teacher_id, title, headman_id) values (1, 'Алгебра логики', 2);
-- insert into courses (teacher_id, title, headman_id) values (2, 'Математическая статистика', 3);
-- insert into courses (teacher_id, title, headman_id) values (4, 'Высшая математика', 5);
-- insert into courses (teacher_id, title, headman_id) values (5, 'Javascript', 1);
-- insert into courses (teacher_id, title, headman_id) values (5, 'Базовый Python', 1);

-- insert into students2courses (student_id, course_id) values (1, 1);
-- insert into students2courses (student_id, course_id) values (2, 1);
-- insert into students2courses (student_id, course_id) values (3, 2);
-- insert into students2courses (student_id, course_id) values (3, 3);
-- insert into students2courses (student_id, course_id) values (4, 5);


-- 1.  Вывести имена студентов и курсы, которые они проходят

-- select
-- 	t1.name,
--   t3.title
-- from students t1
-- inner join students2courses t2
-- on t1.id = t2.student_id
-- inner join courses t3
-- on t2.course_id = t3.id;

-- 2. Вывести имена всех преподавателей с их компетенциями

-- select
-- 	t1.name,
--   t3.title
-- from teachers t1
-- left join Teachers2Сompetencies t2
-- on t1.id = t2.teacher_id
-- left join Сompetencies t3
-- on t2.competencies_id = t3.id;


-- 3. Найти преподавателя, у которого нет компетенций

-- select
-- 	t1.name
-- from teachers t1
-- left join Teachers2Competencies t2
-- on t1.id = t2.teacher_id
-- where t2.competencies_id is null;


-- 4. Найти имена студентов, которые не проходят ни один курс

-- select
-- 	t1.name
-- from students t1
-- left join students2courses t2
-- on t1.id = t2.student_id
-- where t2.student_id is null;

-- 5.  Найти курсы, которые не посещает ни один студент
